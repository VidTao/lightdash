version: "3.8"
volumes:
  node_modules:
  ssl-certs:

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - lightdash-dev
      - minio
    command: nginx -g 'daemon off;'

  minio:
    image: bitnami/minio:latest
    expose:
      - "9000"
      - "9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKETS}

  lightdash-dev:
    build:
      context: ..
      dockerfile: dockerfile
      target: dev
    depends_on:
      - minio
      - db-dev
    expose:
      - "8080"
      - "9090"
      - "3000"
    environment:
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - RUDDERSTACK_WRITE_KEY=${RUDDERSTACK_WRITE_KEY}
      - RUDDERSTACK_DATA_PLANE_URL=${RUDDERSTACK_DATA_PLANE_URL}
      - SECURE_COOKIES=true
      - LIGHTDASH_SECRET=${LIGHTDASH_SECRET}
      - LIGHTDASH_LOG_LEVEL=${LIGHTDASH_LOG_LEVEL}
      - LIGHTDASH_LICENSE_KEY=${LIGHTDASH_LICENSE_KEY}
      - NODE_ENV=${NODE_ENV}
      - DBT_DEMO_DIR=${DBT_DEMO_DIR}
      - AUTH_DISABLE_PASSWORD_AUTHENTICATION=${AUTH_DISABLE_PASSWORD_AUTHENTICATION}
      - AUTH_ENABLE_GROUP_SYNC=${AUTH_ENABLE_GROUP_SYNC}
      - SITE_URL=https://v2.bratrax.com
      - EXPOSED_SITE_URL=https://v2.bratrax.com
      - ALLOW_MULTIPLE_ORGS=${ALLOW_MULTIPLE_ORGS}
      - LIGHTDASH_QUERY_MAX_LIMIT=${LIGHTDASH_QUERY_MAX_LIMIT}
      - HEADLESS_BROWSER_HOST=${HEADLESS_BROWSER_HOST}
      - HEADLESS_BROWSER_PORT=${HEADLESS_BROWSER_PORT}
      - SCHEDULER_ENABLED=${SCHEDULER_ENABLED}
      - GROUPS_ENABLED=${GROUPS_ENABLED}
      - TRUST_PROXY=true
      - POSTHOG_PROJECT_API_KEY=${POSTHOG_PROJECT_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}
      - OPENAI_EMBEDDING_MODEL_NAME=${OPENAI_EMBEDDING_MODEL_NAME}
      - AI_COPILOT_ENABLED=${AI_COPILOT_ENABLED}
      - AI_COPILOT_EMBEDDING_SEARCH_ENABLED=${AI_COPILOT_EMBEDDING_SEARCH_ENABLED}
      - POSTHOG_FE_API_HOST=${POSTHOG_FE_API_HOST}
      - POSTHOG_BE_API_HOST=${POSTHOG_BE_API_HOST}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - SLACK_CLIENT_ID=${SLACK_CLIENT_ID}
      - SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET}
      - SLACK_STATE_SECRET=${SLACK_STATE_SECRET}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
      - GITHUB_PRIVATE_KEY=${GITHUB_PRIVATE_KEY}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_APP_NAME=${GITHUB_APP_NAME}
      - GITHUB_REDIRECT_DOMAIN=${GITHUB_REDIRECT_DOMAIN}
      - GOOGLE_DRIVE_API_KEY=${GOOGLE_DRIVE_API_KEY}
      - AUTH_GOOGLE_OAUTH2_CLIENT_ID=${AUTH_GOOGLE_OAUTH2_CLIENT_ID}
      - AUTH_GOOGLE_OAUTH2_CLIENT_SECRET=${AUTH_GOOGLE_OAUTH2_CLIENT_SECRET}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE}
      - S3_EXPIRATION_TIME=${S3_EXPIRATION_TIME}
      - RESULTS_CACHE_S3_REGION=${RESULTS_CACHE_S3_REGION}
      - RESULTS_CACHE_S3_BUCKET=${RESULTS_CACHE_S3_BUCKET}
      - RESULTS_CACHE_S3_SECRET_KEY=${RESULTS_CACHE_S3_SECRET_KEY}
      - RESULTS_CACHE_S3_ACCESS_KEY=${RESULTS_CACHE_S3_ACCESS_KEY}
    volumes:
      - "../packages/frontend/src:/usr/app/packages/frontend/src"
      - "../packages/backend/src:/usr/app/packages/backend/src"
      - "../packages/common/src:/usr/app/packages/common/src"
      - "../packages/warehouses/src:/usr/app/packages/warehouses/src"
      - "../package.json:/usr/app/package.json"
      - "../pnpm-workspace.yaml:/usr/app/pnpm-workspace.yaml"
      - "../packages/frontend/package.json:/usr/app/packages/frontend/package.json"
      - "../packages/backend/package.json:/usr/app/packages/backend/package.json"
      - "../packages/common/package.json:/usr/app/packages/common/package.json"
      - "../packages/warehouses/package.json:/usr/app/packages/warehouses/package.json"
      - "../examples/full-jaffle-shop-demo/dbt:/usr/app/dbt"
      - "../dbt/bratrax:/usr/app/dbt/bratrax"
      - "node_modules:/usr/app/node_modules/"
      - "/usr/app/packages/common/dist"
    command: >
      sh -c "
          pnpm install &&
          cd packages/backend &&
          pnpm run migrate &&
          cd ../.. &&
          pnpm run dev"

  db-dev:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
    ports:
      - "5433:${PGPORT}"

  headless-browser:
    image: ghcr.io/browserless/chromium:v2.24.3
    restart: always
    expose:
      - "3000"
